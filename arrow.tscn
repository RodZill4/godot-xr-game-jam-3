[gd_scene load_steps=4 format=3 uid="uid://b3qlbe0axfym7"]

[sub_resource type="Shader" id="Shader_iacbx"]
code = "shader_type spatial;
render_mode blend_add, depth_draw_never, cull_disabled, unshaded;

uniform vec4 albedo : source_color;

void vertex() {
	// Billboard Mode: Y-Billboard
	MODELVIEW_MATRIX = VIEW_MATRIX * mat4(
			vec4(normalize(cross(vec3(0.0, 1.0, 0.0), MAIN_CAM_INV_VIEW_MATRIX[2].xyz)), 0.0),
			vec4(0.0, 1.0, 0.0, 0.0),
			vec4(normalize(cross(MAIN_CAM_INV_VIEW_MATRIX[0].xyz, vec3(0.0, 1.0, 0.0))), 0.0),
			MODEL_MATRIX[3]);
	MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
}

void fragment() {
	vec2 base_uv = UV;
	vec2 a_uv = abs(UV-vec2(0.5));
	ALBEDO = albedo.rgb * sqrt(0.5-a_uv.y) * (0.5-a_uv.x) * (1.0+cos(100.0*UV.y+10.0*a_uv.x-5.0*TIME));
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xhp3w"]
render_priority = 0
shader = SubResource("Shader_iacbx")
shader_parameter/albedo = Color(0.983333, 1, 0, 1)

[sub_resource type="QuadMesh" id="QuadMesh_t1sgy"]
material = SubResource("ShaderMaterial_xhp3w")
size = Vector2(2, 25)

[node name="Arrow" type="Node3D"]

[node name="Arrow" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 12.5, 0)
mesh = SubResource("QuadMesh_t1sgy")
